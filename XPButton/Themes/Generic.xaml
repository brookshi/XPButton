<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:XP">

    <Style TargetType="local:XPButton">
        <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundTransparentBrush}"/>
        <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}"/>
        <Setter Property="Padding" Value="8,4,8,4"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="UseSystemFocusVisuals" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:XPButton">
                    <Grid x:Name="RootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IconPositionState">
                                <VisualState x:Name="LeftIcon"/>
                                <VisualState x:Name="RightIcon">
                                    <VisualState.StateTriggers>
                                        <local:IconPositionTrigger ButtonIconPosition="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IconPosition, Mode=TwoWay}" TriggerIconPosition="Right"/>
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="SymbolView.(RelativePanel.AlignLeftWithPanel)" Value="False"/>
                                        <Setter Target="SymbolView.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="TopIcon">
                                    <VisualState.StateTriggers>
                                        <local:IconPositionTrigger ButtonIconPosition="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IconPosition, Mode=TwoWay}" TriggerIconPosition="Top"/>
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="SymbolView.(RelativePanel.AlignLeftWithPanel)" Value="False"/>
                                        <Setter Target="SymbolView.(RelativePanel.AlignTopWithPanel)" Value="True"/>
                                        <Setter Target="SymbolView.(RelativePanel.AlignVerticalCenterWithPanel)" Value="False"/>
                                        <Setter Target="SymbolView.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True"/>
                                        <Setter Target="ContentPresenter.(RelativePanel.AlignVerticalCenterWithPanel)" Value="False"/>
                                        <Setter Target="ContentPresenter.(RelativePanel.Below)" Value="SymbolView"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="BottomIcon">
                                    <VisualState.StateTriggers>
                                        <local:IconPositionTrigger ButtonIconPosition="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IconPosition, Mode=TwoWay}" TriggerIconPosition="Bottom"/>
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="SymbolView.(RelativePanel.AlignLeftWithPanel)" Value="False"/>
                                        <Setter Target="SymbolView.(RelativePanel.AlignBottomWithPanel)" Value="True"/>
                                        <Setter Target="SymbolView.(RelativePanel.AlignVerticalCenterWithPanel)" Value="False"/>
                                        <Setter Target="SymbolView.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True"/>
                                        <Setter Target="ContentPresenter.(RelativePanel.AlignVerticalCenterWithPanel)" Value="False"/>
                                        <Setter Target="ContentPresenter.(RelativePanel.Above)" Value="SymbolView"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoIcon">
                                    <VisualState.StateTriggers>
                                        <local:IconPositionTrigger ButtonIconPosition="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IconPosition, Mode=TwoWay}" TriggerIconPosition="NoIcon"/>
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="SymbolView.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OnlyIcon">
                                    <VisualState.StateTriggers>
                                        <local:IconPositionTrigger ButtonIconPosition="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IconPosition, Mode=TwoWay}" TriggerIconPosition="OnlyIcon"/>
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Visibility" Value="Collapsed"/>
                                        <Setter Target="SymbolView.(RelativePanel.AlignLeftWithPanel)" Value="False"/>
                                        <Setter Target="SymbolView.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border CornerRadius="{TemplateBinding CornerRadius}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}">
                            <RelativePanel x:Name="VisualPanel"  Padding="{TemplateBinding Padding}">
                                <Viewbox
                                    x:Name="SymbolView"
                                    Margin="{TemplateBinding IconMargin}"
                                    Width="{TemplateBinding IconSize}"
                                    Height="{TemplateBinding IconSize}"
                                    VerticalAlignment="Stretch"
                                    RelativePanel.AlignLeftWithPanel="True"
                                    RelativePanel.AlignVerticalCenterWithPanel="True">
                                    <ContentControl x:Name="Symbol"
                                            Content="{TemplateBinding Icon}" 
                                            Foreground="{TemplateBinding Foreground}"/>
                                </Viewbox>
                                <ContentPresenter x:Name="ContentPresenter"
                                    Margin="{TemplateBinding ContentMargin}" 
                                    AutomationProperties.AccessibilityView="Raw" 
                                    RelativePanel.AlignHorizontalCenterWithPanel="True" 
                                    RelativePanel.AlignVerticalCenterWithPanel="True"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" 
                                    ContentTransitions="{TemplateBinding ContentTransitions}" 
                                    Content="{TemplateBinding Content}" />
                            </RelativePanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
